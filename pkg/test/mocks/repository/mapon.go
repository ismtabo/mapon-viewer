// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/repository/mapon.go

// Package repository is a generated GoMock package.
package repository

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	model "github.com/ismtabo/mapon-viewer/pkg/model"
)

// MockMaponRepository is a mock of MaponRepository interface.
type MockMaponRepository struct {
	ctrl     *gomock.Controller
	recorder *MockMaponRepositoryMockRecorder
}

// MockMaponRepositoryMockRecorder is the mock recorder for MockMaponRepository.
type MockMaponRepositoryMockRecorder struct {
	mock *MockMaponRepository
}

// NewMockMaponRepository creates a new mock instance.
func NewMockMaponRepository(ctrl *gomock.Controller) *MockMaponRepository {
	mock := &MockMaponRepository{ctrl: ctrl}
	mock.recorder = &MockMaponRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMaponRepository) EXPECT() *MockMaponRepositoryMockRecorder {
	return m.recorder
}

// GetInfo mocks base method.
func (m *MockMaponRepository) GetInfo(ctx context.Context, from, till time.Time) ([]*model.MaponRoute, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInfo", ctx, from, till)
	ret0, _ := ret[0].([]*model.MaponRoute)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInfo indicates an expected call of GetInfo.
func (mr *MockMaponRepositoryMockRecorder) GetInfo(ctx, from, till interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInfo", reflect.TypeOf((*MockMaponRepository)(nil).GetInfo), ctx, from, till)
}
